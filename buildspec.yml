version: 0.2
env:
  variables:
    DOTCOVER_VERSION: "2019.3.2"
    JUNITTESTLOGGER_VERSION: "1.1.0"
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)

      - echo Installing .net core sdk 3.1 on Ubuntu 18.04
      - wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
      - dpkg -i packages-microsoft-prod.deb
      - add-apt-repository universe
      - apt-get update
      - apt-get install apt-transport-https
      - apt-get update
      - apt-get install -y dotnet-sdk-3.1
  build:
    commands:
      - echo Build started...
      - cd src
      - chmod +x ./Host/nuget-setup.sh
      - ./Host/nuget-setup.sh
      - dotnet add UnitTests package JUnitTestLogger --version $JUNITTESTLOGGER_VERSION
      - dotnet add UnitTests package JetBrains.dotCover.DotNetCliTool --version $DOTCOVER_VERSION
      - dotnet build

      - echo Running unit tests...
      - REPOSITORY_NAME=${CODEBUILD_SRC_DIR##*/}
      - BRANCH_NAME=$(echo  ${CODEBUILD_WEBHOOK_TRIGGER#*/} | tr -s '/' '-')
      - COMMIT_SHORT_HASH=$(printf "%.11s" $CODEBUILD_SOURCE_VERSION)
      - BUILD_ARTIFACTS_PATH="${REPOSITORY_NAME}/${CODEBUILD_BUILD_NUMBER}"
      - ~/.nuget/packages/jetbrains.dotcover.dotnetclitool/$DOTCOVER_VERSION/tools/dotCover.sh dotnet 
          --output=../$BUILD_ARTIFACTS_PATH/CoverageReport.html 
          --reportType=HTML 
          -- test --no-build --logger "junit;LogFilePath=../${BUILD_ARTIFACTS_PATH}/TestResults.xml" --verbosity:normal

      - echo Building the Docker image...
      - cd Host
      - ECR_REPOSITORY=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPOSITORY_NAME
      - IMAGE_TAG="${REPOSITORY_NAME}_${BRANCH_NAME}_${CODEBUILD_BUILD_NUMBER}_${COMMIT_SHORT_HASH}"
      - docker build -t $ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REPOSITORY:latest .

      - echo Publishing the Docker image...
      - docker push $ECR_REPOSITORY:$IMAGE_TAG
      - docker push $ECR_REPOSITORY:latest

      - echo Done
reports:
  TestReports:
    files: # publisihing test results
      - ./$BUILD_ARTIFACTS_PATH/TestResults.xml
artifacts:
  files: # publishing coverage report to S3
    - ./$BUILD_ARTIFACTS_PATH/**/*
