version: 0.2
env:
  variables:
    BASE_VERSION: "0.1.0"
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)

      - echo Installing .net core sdk 3.1 on Ubuntu 18.04
      - wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
      - dpkg -i packages-microsoft-prod.deb
      - add-apt-repository universe
      - apt-get update
      - apt-get install apt-transport-https
      - apt-get update
      - apt-get install -y dotnet-sdk-3.1
  build:
    commands:
      - echo Build started...
      - cd src
      - chmod +x ./Host/nuget-setup.sh
      - ./Host/nuget-setup.sh
      - dotnet build

      - echo Running unit tests...
#      - dotnet add UnitTests package coverlet.msbuild
#      - dotnet test --no-build --logger trx --verbosity:normal /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=opencover /p:threshold=80
      - cd UnitTests
      - dotnet add package JUnitTestLogger --version 1.1.0
      - dotnet restore 
      - dotnet test --logger "junit;LogFilePath=TestResults/TestResults.xml" --verbosity:normal

      - echo Building the Docker image...
      - cd ../Host
      - ECR_REPOSITORY=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPOSITORY_NAME
      - COMMIT_SHORT_HASH=$(printf "%.11s" $COMMIT_ID)
      - IMAGE_TAG="${REPOSITORY_NAME}_${BRANCH_NAME}_${BASE_VERSION}_${CODEBUILD_BUILD_NUMBER}_${COMMIT_SHORT_HASH}"
      - docker build -t $ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REPOSITORY:latest .

      - echo Pushing the Docker image...
      - docker push $ECR_REPOSITORY:$IMAGE_TAG
      - docker push $ECR_REPOSITORY:latest
      - echo Done
reports: #New
  TestReports: # CodeBuild will create a report group called "SurefireReports".
    files: #Store all of the files
      - ./src/UnitTests/TestResults/*
artifacts:
  files:
    - ./src/UnitTests/TestResults/*
