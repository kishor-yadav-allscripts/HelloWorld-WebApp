version: 0.2
env:
  variables:
    BASE_VERSION: "0.1.0"
phases:
  install:
    runtime-versions:
      dotnet: 3.0
      docker: 18
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - echo $COMMIT_ID
      - printf "%.11s" $COMMIT_ID
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)

      - echo Installing .net core sdk 3.1 on Ubuntu 18.04
      - wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
      - dpkg -i packages-microsoft-prod.deb
      - add-apt-repository universe
      - apt-get update
      - apt-get install apt-transport-https
      - apt-get update
      - apt-get install -y dotnet-sdk-3.1

      - echo Installing sonar scanner tool for code coverage
      - dotnet tool install --global dotnet-sonarscanner --version 4.8.0
  build:
    commands:
      - echo Build started...
      - cd src
      - chmod +x ./Host/nuget-setup.sh
      - ./Host/nuget-setup.sh
      - dotnet build

      - echo Running unit tests...
      - dotnet add UnitTests package coverlet.msbuild
      - dotnet test --no-build --logger trx --verbosity:normal /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=opencover /p:threshold=80

      - echo Building the Docker image...
      - cd Host
      - ECR_REPOSITORY=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPOSITORY_NAME
      - IMAGE_TAG="${REPOSITORY_NAME}_${BRANCH_NAME}_${BASE_VERSION}_${CODEBUILD_BUILD_NUMBER}_${COMMIT_ID}"
      - docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      - echo Pushing the Docker image...
      - docker push $ECR_REPOSITORY:$IMAGE_TAG
      - echo Done
artifacts:
  files:
    - ./src/UnitTests/TestResults/*
